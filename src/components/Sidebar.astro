---
import {
DesktopIcon,
DiscordLogoIcon,
GitHubLogoIcon,
HomeIcon,
InstagramLogoIcon,
LinkedInLogoIcon,
MagicWandIcon,
ReaderIcon,
TwitterLogoIcon,
} from "@radix-ui/react-icons"
import type { IconProps } from "@radix-ui/react-icons/dist/types"

export interface UrlItem {
    url: string;
    name: string;
    icon: React.ForwardRefExoticComponent<
        IconProps & React.RefAttributes<SVGSVGElement>
    >;
}

export type UrlItemRecord = Record<string, UrlItem>;

export interface JsonData {
    name: string;
    openToJob: boolean;
    profesion: string;
    pages: UrlItemRecord;
    socials: UrlItemRecord;
}

const jsonSimulation: JsonData = {
    name: "Jesus Oyola",
    profesion: "Full-stack developer",
    openToJob: true,
    pages: {
        home: {
            url: "/",
            name: "Home",
            icon: HomeIcon,
        },
        projects: {
            url: "/projects",
            name: "Projects",
            icon: MagicWandIcon,
        },
        blog: {
            url: "/blog",
            name: "Blog",
            icon: ReaderIcon,
        },
        workspace: {
            url: "/workspace",
            name: "Workspace",
            icon: DesktopIcon,
        },
    },
    socials: {
        github: {
            name: "Github",
            url: "https://github.com/Jes015",
            icon: GitHubLogoIcon,
        },
        linkedIn: {
            name: "LinkedIn",
            url: "https://github.com/Jes015",
            icon: LinkedInLogoIcon,
        },
        instagram: {
            name: "Instagram",
            url: "https://github.com/Jes015",
            icon: InstagramLogoIcon,
        },
        x: {
            name: "Twitter",
            url: "https://github.com/Jes015",
            icon: TwitterLogoIcon,
        },
        discord: {
            name: "Discord",
            url: "https://github.com/Jes015",
            icon: DiscordLogoIcon,
        },
    },
} as const; // This is temporal, while we add the json data
---

<aside
    class="flex flex-col gap-2 min-w-80 bg-zinc-50 p-3 pb-0 [flex-basis:auto] flex-shrink-0 border-r border-r-neutral-100"
>
    <header>
        <div class="flex items-center gap-1">
            <div
                class="w-10 aspect-square rounded-full bg-slate-300 border border-neutral-100"
            >
            </div>
            <div class="flex flex-col pt-1">
                <span class="font-bold leading-4 text-[0.9rem]"
                    >{jsonSimulation.name}</span
                >
                <span class="text-gray-600 capitalize"
                    >{jsonSimulation.profesion}</span
                >
            </div>
        </div>
    </header>
    <div class="flex-grow">
        <header>
            <span class="capitalize text-gray-600 font-medium text-xs">
                Routes
            </span>
        </header>
        <div>
            <nav>
                <ul class="flex flex-col gap-1">
                    {
                        Object.values(jsonSimulation.pages).map((page) => (
                            <li>
                                <a
                                    class="border border-transparent border-neutral-400 flex text-sm gap-2 font-medium hover:bg-zinc-300 transition-all [trasition-duration:0.1s] items-center p-2 w-full capitalize  rounded-md"
                                    href={page.url}
                                >
                                    <page.icon width={18} height={18} />
                                    {page.name}
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </nav>
        </div>
    </div>
    <footer class="flex flex-col items-center gap-2">
        <div class="flex gap-1">
            {
                Object.values(jsonSimulation.socials).map((networkData) => (
                    <a
                        class="capitalize font-[500] underline text-sm hover:scale-150 [transition-duration:0.25s]"
                        target="_blank"
                        rel="noopener"
                        href={networkData.url}
                        title={networkData.name}
                        aria-label={`Go to ${jsonSimulation.name}'s ${networkData.name}`}
                    >
                        <networkData.icon
                            aria-hidden="true"
                            width={24}
                            height={24}
                        />
                    </a>
                ))
            }
        </div>
        <div class="text-gray-600 text-xs">
            <span class="">Based on</span>
            <a
                rel="noopener noreferrer"
                target="_blank"
                class="font-medium underline"
                href="https://onur.dev/">Onur portfolio</a
            >
        </div>
    </footer>
</aside>
